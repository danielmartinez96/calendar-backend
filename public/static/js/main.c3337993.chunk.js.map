{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/eventsActions.js","components/ui/Navbar.js","helpers/calendar-messges-es.js","components/calendar/CalendarEvent.js","actions/uiActions.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducers.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endM","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","closeTimeoutMS","onRequestClose","style","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","selectable","onSelectSlot","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3337993.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint,data,method='GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; \r\n    if(method==='GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst fetchConToken = (endpoint,data,method='GET') => {\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n    const url = `${baseUrl}/${endpoint}`; \r\n\r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            },\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types ={\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    \r\n    eventSetActive: '[event] Set Active',\r\n    eventClearLogout: '[event] Clear Events in Logout',\r\n    eventStartAddNew: '[event] Start Add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = ()=>{\r\n    return(dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\n\r\nconst logout = ()=>({\r\n    type:types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin,startRegister } from '../../actions/authActions';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'daniel@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    \r\n        const handleLogin = (e) => {\r\n            e.preventDefault();\r\n            dispatch(startLogin(lEmail, lPassword));\r\n        }\r\n    \r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName:'seba',\r\n        rEmail: 'seba@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const   {rName,rEmail,rPassword1,rPassword2 } = formRegisterValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(rPassword1!==rPassword2){\r\n            return Swal.fire(\"Error\",\"Las constraseñas no coinciden\",'error');\r\n        }   \r\n\r\n        dispatch(startRegister(rEmail,rPassword1,rName));\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events=[])=>{\r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate()\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event)\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n            console.log(body);\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete= ()=>{\r\n    return async (dispatch,getState)=>{\r\n        const {id}=getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos)\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventClearLogout= ()=>({\r\n    type:types.eventClearLogout\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/authActions';\r\nimport { eventClearLogout } from '../../actions/eventsActions';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(eventClearLogout());\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dar bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}    \r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i> \r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title,user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{title} -</strong>\r\n            <span>{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {uiCloseModal} from '../../actions/uiActions';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/eventsActions';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\n\r\nconst endM = moment().clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end:endM.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(endM.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n \r\n\r\n    const {notes,title,start,end}= formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n            setDateEnd(moment(activeEvent.end).toDate());\r\n            setDateStart(moment(activeEvent.start).toDate());\r\n        }\r\n    }, [activeEvent])\r\n    const closeModal = () => {\r\n        dispatch((uiCloseModal()));\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n    const onChangeEndDate = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end:e\r\n        });\r\n    }\r\n    const onChangeStartDate = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start:e\r\n        });\r\n    }\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]:target.value\r\n        });\r\n        \r\n    }\r\n    \r\n    const handleSubmitForm = (e)=>{\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire(\"La fecha fin tiene que ser mayor a la inicio\");\r\n        }\r\n\r\n        if(title.trim().length<2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        // onAfterOpen={afterOpenModal}\r\n        closeTimeoutMS={2000}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> Nuevo evento </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={onChangeStartDate}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                        />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={onChangeEndDate}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid &&'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"note\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n      </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent } from '../../actions/eventsActions'\r\nimport { uiOpenModal } from '../../actions/uiActions'\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleOpenAddEvent = () => {\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n    \r\n\r\n    return (\r\n            <button\r\n                className=\"btn btn-primary fab\"\r\n                onClick={handleOpenAddEvent}\r\n            >\r\n                <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/eventsActions';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleDetele = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDetele}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Calendar,momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messges-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport {uiOpenModal} from '../../actions/uiActions'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/eventsActions';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user:{\r\n//         _id:'123',\r\n//         name:'Fernando'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const {events,activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView')||'month');\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n\r\n    const onDoubleClick = (e)=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e)=>{\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const eventStyleGetter = (event,start,end,isSelected)=>{\r\n        const style = {\r\n            backgroundColor: (uid ===event.user._id)?'#367CF7':'#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display:'block',\r\n            color:'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                selectable={true}\r\n                onSelectSlot={onSelectedSlot}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            {\r\n                activeEvent&&<DeleteEventFab/>\r\n            }\r\n            <AddNewFab/>\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/login\"/>)\r\n            )}\r\n        />\r\n            \r\n       \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n            \r\n       \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/authActions';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return (<h5>Espere....</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state=initialState,action) =>{\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking:false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking:false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from '../types/types';\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     user:{\r\n//         _id:'123',\r\n//         name:'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events:[],\r\n    activeEvent:null\r\n};\r\n\r\nexport const calendarReducer = (state= initialState,action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }    \r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[action.payload,...state.events]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent:null\r\n            }\r\n        case types.eventUpdate:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e=>(e.id===action.payload.id)?\r\n                        action.payload\r\n                        :\r\n                        e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e=>(e.id!==state.activeEvent.id)\r\n                ),\r\n                activeEvent:null\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n        case types.eventClearLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    modalOpen:false\r\n}\r\n\r\nexport const uiReducer = (state= initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducers';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import {createStore,compose,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    \r\n); ","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './style.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}